import { z } from "zod";

export const KOLSchema = z.object({
  twitter_bind: z.boolean().optional(),
  twitter_url: z.string().url().optional(),
  twitter_fans_num: z.number().optional(),
  twitter_username: z.string().optional(),
  twitter_name: z.string().optional(),
  ens: z.nullable(z.string()),
  avatar: z.string().url().optional(),
  name: z.string().optional(),
  balance: z.string().optional(),
  total_value: z.number().optional(),
  unrealized_profit: z.number().optional(),
  unrealized_pnl: z.number().optional(),
  realized_profit: z.number().optional(),
  pnl: z.number().optional(),
  pnl_1d: z.number().optional(),
  pnl_7d: z.number().optional(),
  pnl_30d: z.number().optional(),
  realized_profit_1d: z.number().optional(),
  realized_profit_7d: z.number().optional(),
  realized_profit_30d: z.number().optional(),
  winrate: z.number().optional(),
  all_pnl: z.number().optional(),
  total_profit: z.number().optional(),
  total_profit_pnl: z.number().optional(),
  buy_1d: z.number().optional(),
  sell_1d: z.number().optional(),
  buy_7d: z.number().optional(),
  sell_7d: z.number().optional(),
  buy_30d: z.number().optional(),
  sell_30d: z.number().optional(),
  buy: z.number().optional(),
  sell: z.number().optional(),
  history_bought_cost: z.number().optional(),
  token_avg_cost: z.number().optional(),
  token_sold_avg_profit: z.number().optional(),
  token_num: z.number().optional(),
  profit_num: z.number().optional(),
  pnl_lt_minus_dot5_num: z.number().optional(),
  pnl_minus_dot5_0x_num: z.number().optional(),
  pnl_lt_2x_num: z.number().optional(),
  pnl_2x_5x_num: z.number().optional(),
  pnl_gt_5x_num: z.number().optional(),
  last_active_timestamp: z.number().optional(),
  tags: z.array(z.string()),
  tag_rank: z.record(z.string(), z.number().nullable().optional()),
  followers_count: z.number().optional(),
  is_contract: z.boolean().optional(),
  updated_at: z.number().optional(),
  refresh_requested_at: z.nullable(z.number()),
  avg_holding_peroid: z.number().optional(),
  trade: z.array(
    z.object({
      token: z.object({
        address: z.string().optional(),
        token_address: z.string().optional(),
        symbol: z.string().optional(),
        name: z.string().optional(),
        decimals: z.number().optional(),
        logo: z.string().url().optional(),
        price_change_6h: z.string().optional(),
        is_show_alert: z.boolean().optional(),
        is_honeypot: z.nullable(z.boolean()),
      }),
      balance: z.string().optional(),
      usd_value: z.string().optional(),
      realized_profit_30d: z.string().optional(),
      realized_profit: z.string().optional(),
      realized_pnl: z.string().optional(),
      realized_pnl_30d: z.string().optional(),
      unrealized_profit: z.string().optional(),
      unrealized_pnl: z.string().optional(),
      total_profit: z.string().optional(),
      total_profit_pnl: z.string().optional(),
      avg_cost: z.string().optional(),
      avg_sold: z.string().optional(),
      buy_30d: z.number().optional(),
      sell_30d: z.number().optional(),
      sells: z.number().optional(),
      price: z.string().optional(),
      cost: z.string().optional(),
      position_percent: z.string().optional(),
      last_active_timestamp: z.number().optional(),
      history_sold_income: z.string().optional(),
      history_bought_cost: z.string().optional(),
      start_holding_at: z.number().optional().nullable(),
      end_holding_at: z.nullable(z.number()),
      liquidity: z.string().optional(),
      wallet_token_tags: z.nullable(z.array(z.string())),
    })
  ),
});

export type KOL = z.infer<typeof KOLSchema>;